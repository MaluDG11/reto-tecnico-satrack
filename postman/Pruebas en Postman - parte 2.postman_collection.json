{
	"info": {
		"_postman_id": "6588de27-8cca-4a63-b735-457f8070d409",
		"name": "Pruebas en Postman - parte 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18807877"
	},
	"item": [
		{
			"name": "ConsultarPrimeraPaginaPersonajes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Obtener la respuesta JSON\r",
							"let response = pm.response.json();\r",
							"\r",
							"// Contar la cantidad de personajes en \"results\"\r",
							"let numeroPersonajes = response.results.length;\r",
							"\r",
							"// Mostrar en consola\r",
							"console.log(\"Número de personajes en la primera página: \" + numeroPersonajes);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character?page=1",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ConsultarPersonajeInexistente",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/99999",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"99999"
					]
				}
			},
			"response": []
		},
		{
			"name": "ObtenerPersonajeID1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/1",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ContarHumanosVivos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"console.log(\"Número personajes humanos vivos:\", response.info.count);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/?species=Human&status=Alive\n",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						""
					],
					"query": [
						{
							"key": "species",
							"value": "Human"
						},
						{
							"key": "status",
							"value": "Alive\n"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PersonajesPrimerEpisodio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let characters = pm.response.json();\r",
							"\r",
							"// Normalizar a array\r",
							"if (!Array.isArray(characters)) {\r",
							"    characters = [characters];\r",
							"}\r",
							"\r",
							"// Extraer nombres\r",
							"let names = characters.map(c => c.name);\r",
							"\r",
							"// Mostrar nombres en consola\r",
							"console.log(\"Nombres de personajes del episodio 1:\", names);\r",
							"\r",
							"// Guardar en variable de entorno si quieres\r",
							"pm.environment.set(\"episode1CharacterNames\", JSON.stringify(names));"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/1,2,35,38,62,92,127,144,158,175,179,181,239,249,271,338,394,395,435\n",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"1,2,35,38,62,92,127,144,158,175,179,181,239,249,271,338,394,395,435\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "ValidarStatusRick",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Rick Sanchez está vivo\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"Alive\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/1",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ObtenerSmith",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/3",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "ObtenerMorty",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/2",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "CompararPagina1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const names = jsonData.results.map(character => character.name);\r",
							"const totalCharacters = names.length;\r",
							"console.log(names);\r",
							"console.log(\"Cantidad total de personajes pag.1:\", totalCharacters);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character?page=1",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CompararPagina2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const names = jsonData.results.map(character => character.name);\r",
							"const totalCharacters = names.length;\r",
							"console.log(names);\r",
							"console.log(\"Cantidad total de personajes pag.2:\", totalCharacters);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character?page=2",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObtenerUbicacionMorty",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/location/3",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"location",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "NombreUbicacionMorty",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/location/3",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"location",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "CompararEpisodiosRickSummer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let data = pm.response.json();\r",
							"\r",
							"let rick = data.find(c => c.name === \"Rick Sanchez\");\r",
							"let summer = data.find(c => c.name === \"Summer Smith\");\r",
							"\r",
							"let rickEpisodes = rick.episode.length;\r",
							"let summerEpisodes = summer.episode.length;\r",
							"\r",
							"console.log(\"Rick aparece en\", rickEpisodes, \"episodios\");\r",
							"console.log(\"Summer aparece en\", summerEpisodes, \"episodios\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/character/1,3",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"character",
						"1,3"
					]
				}
			},
			"response": []
		},
		{
			"name": "ObtenerEpisodio1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let episode = pm.response.json();\r",
							"if (episode.characters && Array.isArray(episode.characters)) {\r",
							"    let ids = episode.characters.map(url => url.split('/').pop());\r",
							"    console.log(\" IDs de personajes del primer episodio:\", ids);\r",
							"    pm.environment.set(\"episode1CharacterIDs\", ids.join(','));\r",
							"} else {\r",
							"    console.error(\"No se encontraron personajes en la respuesta:\", episode);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/api/episode/1",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"api",
						"episode",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "characterUrls",
			"value": ""
		},
		{
			"key": "allEpisodeCharacters",
			"value": ""
		},
		{
			"key": "currentCharacterUrl",
			"value": "",
			"type": "default"
		}
	]
}